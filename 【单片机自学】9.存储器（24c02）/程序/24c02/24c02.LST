C51 COMPILER V9.01   24C02                                                                 03/03/2012 16:06:36 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE 24C02
OBJECT MODULE PLACED IN 24c02.OBJ
COMPILER INVOKED BY: D:\C51\BIN\C51.EXE 24c02.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>          //头文件的包含
   2          #include <intrins.h>
   3          #define  _Nop()  _nop_()        //定义空指令                                             
   4          sbit SDA=P2^1;            //模拟I2C数据传送位
   5          sbit SCL=P2^0;            //模拟I2C时钟控制位                          
   6          bit ack;                      //应答标志位  
   7          void DelayUs2x(unsigned char t);//函数声明 
   8          void DelayMs(unsigned char t);
   9          /*------------------------------------------------
  10                           uS延时函数
  11          ------------------------------------------------*/
  12          void DelayUs2x(unsigned char t)
  13          {   
  14   1       while(--t);
  15   1      }
  16          /*------------------------------------------------
  17                           mS延时函数
  18          ------------------------------------------------*/
  19          void DelayMs(unsigned char t)
  20          {    
  21   1       while(t--)
  22   1       {     //大致延时1mS
  23   2           DelayUs2x(245);
  24   2               DelayUs2x(245);
  25   2       }
  26   1      }
  27          /*------------------------------------------------
  28                              启动总线
  29          ------------------------------------------------*/
  30          void Start_I2c()
  31          {
  32   1        SDA=1;   //发送起始条件的数据信号
  33   1        _Nop();
  34   1        SCL=1;
  35   1        _Nop();    //起始条件建立时间大于4.7us,延时
  36   1        _Nop();
  37   1        _Nop();
  38   1        _Nop();
  39   1        _Nop();    
  40   1        SDA=0;     //发送起始信号
  41   1        _Nop();    //起始条件锁定时间大于4μ
  42   1        _Nop();
  43   1        _Nop();
  44   1        _Nop();
  45   1        _Nop();       
  46   1        SCL=0;    //钳住I2C总线，准备发送或接收数据
  47   1        _Nop();
  48   1        _Nop();
  49   1      }
  50          /*------------------------------------------------
  51                              结束总线
  52          ------------------------------------------------*/
  53          void Stop_I2c()
  54          {
  55   1        SDA=0;    //发送结束条件的数据信号
C51 COMPILER V9.01   24C02                                                                 03/03/2012 16:06:36 PAGE 2   

  56   1        _Nop();   //发送结束条件的时钟信号
  57   1        SCL=1;    //结束条件建立时间大于4μ
  58   1        _Nop();
  59   1        _Nop();
  60   1        _Nop();
  61   1        _Nop();
  62   1        _Nop();
  63   1        SDA=1;    //发送I2C总线结束信号
  64   1        _Nop();
  65   1        _Nop();
  66   1        _Nop();
  67   1        _Nop();
  68   1      }
  69          /*----------------------------------------------------------------
  70                           字节数据传送函数               
  71          函数原型: void  SendByte(unsigned char c);
  72          功能:  将数据c发送出去,可以是地址,也可以是数据,发完后等待应答,并对
  73               此状态位进行操作.(不应答或非应答都使ack=0 假)     
  74               发送数据正常，ack=1; ack=0表示被控器无应答或损坏。
  75          ------------------------------------------------------------------*/
  76          void  SendByte(unsigned char c)
  77          { unsigned char BitCnt; 
  78   1       for(BitCnt=0;BitCnt<8;BitCnt++)  //要传送的数据长度为8位
  79   1          {
  80   2           if((c<<BitCnt)&0x80)SDA=1;   //判断发送位
  81   2             else  SDA=0;                
  82   2           _Nop();
  83   2           SCL=1;               //置时钟线为高，通知被控器开始接收数据位
  84   2            _Nop(); 
  85   2            _Nop();             //保证时钟高电平周期大于4μ
  86   2            _Nop();
  87   2            _Nop();
  88   2            _Nop();         
  89   2           SCL=0; 
  90   2          }    
  91   1          _Nop();
  92   1          _Nop();
  93   1          SDA=1;               //8位发送完后释放数据线，准备接收应答位
  94   1          _Nop();
  95   1          _Nop();   
  96   1          SCL=1;
  97   1          _Nop();
  98   1          _Nop();
  99   1          _Nop();
 100   1          if(SDA==1)ack=0;     
 101   1             else ack=1;        //判断是否接收到应答信号
 102   1          SCL=0;
 103   1          _Nop();
 104   1          _Nop();
 105   1      }
 106          /*----------------------------------------------------------------
 107                           字节数据传送函数               
 108          函数原型: unsigned char  RcvByte();
 109          功能:  用来接收从器件传来的数据,并判断总线错误(不发应答信号)，
 110               发完后请用应答函数。  
 111          ------------------------------------------------------------------*/    
 112          unsigned char  RcvByte()
 113          { unsigned char retc;
 114   1        unsigned char BitCnt;
 115   1        retc=0; 
 116   1        SDA=1;             //置数据线为输入方式
 117   1        for(BitCnt=0;BitCnt<8;BitCnt++)
C51 COMPILER V9.01   24C02                                                                 03/03/2012 16:06:36 PAGE 3   

 118   1            { _Nop();           
 119   2              SCL=0;       //置时钟线为低，准备接收数据位
 120   2              _Nop();
 121   2              _Nop();      //时钟低电平周期大于4.7us
 122   2              _Nop();
 123   2              _Nop();
 124   2              _Nop();
 125   2              SCL=1;       //置时钟线为高使数据线上数据有效
 126   2              _Nop();
 127   2              _Nop();
 128   2              retc=retc<<1;
 129   2              if(SDA==1)retc=retc+1; //读数据位,接收的数据位放入retc中
 130   2              _Nop();
 131   2              _Nop(); 
 132   2            }
 133   1        SCL=0;    
 134   1        _Nop();
 135   1        _Nop();
 136   1        return(retc);
 137   1      }
 138          /*----------------------------------------------------------------
 139                               应答子函数
 140          原型:  void Ack_I2c(void);
 141           
 142          ----------------------------------------------------------------*/
 143          void Ack_I2c(void)
 144          { SDA=0;     
 145   1        _Nop();
 146   1        _Nop();
 147   1        _Nop();      
 148   1        SCL=1;
 149   1        _Nop();
 150   1        _Nop();              //时钟低电平周期大于4μ
 151   1        _Nop();
 152   1        _Nop();
 153   1        _Nop();  
 154   1        SCL=0;               //清时钟线，钳住I2C总线以便继续接收
 155   1        _Nop();
 156   1        _Nop();    
 157   1      }
 158          /*----------------------------------------------------------------
 159                               非应答子函数
 160          原型:  void NoAck_I2c(void);
 161           
 162          ----------------------------------------------------------------*/
 163          void NoAck_I2c(void)
 164          { SDA=1;
 165   1        _Nop();
 166   1        _Nop();
 167   1        _Nop();      
 168   1        SCL=1;
 169   1        _Nop();
 170   1        _Nop();              //时钟低电平周期大于4μ
 171   1        _Nop();
 172   1        _Nop();
 173   1        _Nop();  
 174   1        SCL=0;                //清时钟线，钳住I2C总线以便继续接收
 175   1        _Nop();
 176   1        _Nop();    
 177   1      }
 178          /*----------------------------------------------------------------
 179                              向无子地址器件发送字节数据函数               
C51 COMPILER V9.01   24C02                                                                 03/03/2012 16:06:36 PAGE 4   

 180          函数原型: bit  ISendByte(unsigned char sla,ucahr c);  
 181          功能:     从启动总线到发送地址，数据，结束总线的全过程,从器件地址sla.
 182                     如果返回1表示操作成功，否则操作有误。
 183          注意：    使用前必须已结束总线。
 184          ----------------------------------------------------------------*/
 185          /*bit ISendByte(unsigned char sla,unsigned char c)
 186          {
 187             Start_I2c();               //启动总线
 188             SendByte(sla);             //发送器件地址
 189               if(ack==0)return(0);
 190             SendByte(c);               //发送数据
 191               if(ack==0)return(0);
 192            Stop_I2c();                 //结束总线
 193            return(1);
 194          }
 195          */
 196          /*----------------------------------------------------------------
 197                              向有子地址器件发送多字节数据函数               
 198          函数原型: bit  ISendStr(unsigned char sla,unsigned char suba,ucahr *s,unsigned char no);  
 199          功能:     从启动总线到发送地址，子地址,数据，结束总线的全过程,从器件
 200                    地址sla，子地址suba，发送内容是s指向的内容，发送no个字节。
 201                     如果返回1表示操作成功，否则操作有误。
 202          注意：    使用前必须已结束总线。
 203          ----------------------------------------------------------------*/
 204          bit ISendStr(unsigned char sla,unsigned char suba,unsigned char *s,unsigned char no)
 205          {
 206   1         unsigned char i;
 207   1      
 208   1         Start_I2c();               //启动总线
 209   1         SendByte(sla);             //发送器件地址
 210   1           if(ack==0)return(0);
 211   1         SendByte(suba);            //发送器件子地址
 212   1           if(ack==0)return(0);
 213   1      
 214   1         for(i=0;i<no;i++)
 215   1          {   
 216   2           SendByte(*s);            //发送数据
 217   2             if(ack==0)return(0);
 218   2           s++;
 219   2          } 
 220   1       Stop_I2c();                  //结束总线
 221   1        return(1);
 222   1      }
 223          /*----------------------------------------------------------------
 224                              向无子地址器件读字节数据函数               
 225          函数原型: bit  IRcvByte(unsigned char sla,ucahr *c);  
 226          功能:     从启动总线到发送地址，读数据，结束总线的全过程,从器件地
 227                    址sla，返回值在c.
 228                     如果返回1表示操作成功，否则操作有误。
 229          注意：    使用前必须已结束总线。
 230          ----------------------------------------------------------------*/
 231          /*bit IRcvByte(unsigned char sla,unsigned char *c)
 232          {
 233             Start_I2c();                //启动总线
 234             SendByte(sla+1);            //发送器件地址
 235               if(ack==0)return(0);
 236             *c=RcvByte();               //读取数据
 237               NoAck_I2c();              //发送非就答位
 238               Stop_I2c();               //结束总线
 239            return(1);
 240          }
 241          */
C51 COMPILER V9.01   24C02                                                                 03/03/2012 16:06:36 PAGE 5   

 242          /*----------------------------------------------------------------
 243                              向有子地址器件读取多字节数据函数               
 244          函数原型: bit  ISendStr(unsigned char sla,unsigned char suba,ucahr *s,unsigned char no);  
 245          功能:     从启动总线到发送地址，子地址,读数据，结束总线的全过程,从器件
 246                    地址sla，子地址suba，读出的内容放入s指向的存储区，读no个字节。
 247                     如果返回1表示操作成功，否则操作有误。
 248          注意：    使用前必须已结束总线。
 249          ----------------------------------------------------------------*/
 250          bit IRcvStr(unsigned char sla,unsigned char suba,unsigned char *s,unsigned char no)
 251          {
 252   1         unsigned char i;
 253   1         Start_I2c();               //启动总线
 254   1         SendByte(sla);             //发送器件地址
 255   1           if(ack==0)return(0);
 256   1         SendByte(suba);            //发送器件子地址
 257   1           if(ack==0)return(0);
 258   1         Start_I2c();
 259   1         SendByte(sla+1);
 260   1            if(ack==0)return(0);
 261   1         for(i=0;i<no-1;i++)
 262   1          {   
 263   2           *s=RcvByte();              //发送数据
 264   2            Ack_I2c();                //发送就答位 
 265   2           s++;
 266   2          } 
 267   1         *s=RcvByte();
 268   1          NoAck_I2c();                 //发送非应位
 269   1         Stop_I2c();                    //结束总线
 270   1        return(1);
 271   1      }
 272          /*------------------------------------------------
 273                              主函数
 274          ------------------------------------------------*/
 275          void main()
 276                  {
 277   1               unsigned char doflye;       // 定义临时变量
 278   1               unsigned char i;
 279   1               IRcvStr(0xae,4,&doflye,1);  //调用存储数据      
 280   1               while(1)
 281   1                    {  
 282   2                        P1=doflye;             //数值用二进制显示，直接用8个LED表示
 283   2                for(i=0;i<5;i++)   
 284   2                    DelayMs(200);
 285   2                doflye++;              //1s钟变量自加1，改变值后存储到24c02
 286   2                                       //下次开机时将显示当前数值
 287   2                ISendStr(0xae,4,&doflye,1); //写入24c02
 288   2                        }
 289   1       }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    384    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
